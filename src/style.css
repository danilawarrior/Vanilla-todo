/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями и видео
  */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
  /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
  scrollbar-gutter: stable;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
  /* overflow: hidden; */
}

/**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
a:where([class]) {
  display: inline-flex;
  text-decoration: none;
  color: black;
}

/**
   Курсор-рука при наведении на элемент
  */
button,
label {
  cursor: pointer;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
:where([fill]:not([fill='none'], [fill^='url'])) {
  fill: currentColor;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
:where([stroke]:not([stroke='none'], [stroke^='url'])) {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Приведение рамок таблиц в классический 'collapse' вид
  */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

:root {
  --font-main: 'Comic Relief', cursive;
  --pleasant-color: #faf4e6;
  --lightGray-color: #f0f0f0;
  --caramel-color: rgb(225, 199, 143);
  --arabica-color: rgb(176, 146, 106);
}
body {
  font-family: var(--font-main);
  background-color: var(--pleasant-color);

  width: 100%;
  height: 100%;
}

.container {
  width: 100%;
  max-width: 1456px;
  margin: 0 auto;
  box-sizing: border-box;
}

.header {
  display: flex;
  justify-content: flex-start;
  min-height: 10%;
  align-items: center;
}

.header__nav {
  margin-left: auto;
  margin-right: auto;
}
.header__logo {
  margin-left: 1%;
}

.header__list {
  display: flex;
  min-width: 200px;
  gap: 150px;
}

/* .header__list-item {
  padding-inline: 20%;
} */

.header__list-item a {
  white-space: nowrap;
}
.header__switch-mode {
  margin-right: 1%;
}

.line-gray {
  width: 100%;
  height: 2px;
  background-color: rgb(153, 149, 149);
}
.tools__controls {
  display: flex;
  justify-content: center;
  min-width: 200px;
  margin: 15px;
  gap: 100px;
}
.main-button {
  border-radius: 45%;
  padding: 10px;
  max-height: 50px;
}
.main-button:hover {
  background-color: var(--caramel-color);
}
.tools__drop-button {
  position: relative;
  display: inline-block;
}

.tools__drop-down-content {
  display: none;
  position: absolute;
  background-color: var(--lightGray-color);
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
  border-radius: 35%;
}
.tools__drop-down-content a {
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

.tools__drop-down-content a:hover {
  color: var(--caramel-color);
  border-radius: 35%;
}

.tools__drop-button:hover .tools__drop-down-content {
  display: block;
}

.tasks__modal {
  display: none; /* при отображение менять на flex */
  justify-content: center;
  align-items: center;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4);
}

.tasks__add-modal p {
  text-align: center;
}

.tasks__input {
  min-width: 500px;
  min-height: 100px;
}
.buttons-add-tasks {
  display: flex;
  justify-content: end;
  gap: 10px;
  margin: 3px;
}

.tasks__placement {
  /* display: flex;
  justify-content: flex-start;
  flex-wrap: wrap;
  margin-top: 25px;
  gap: 25px;
  padding-left: 25px; */

  display: grid;
  grid-template-columns: repeat(4, 300px); /* Точно 4 колонки по 300px */
  gap: 25px; /* Отступы между карточками */
  justify-content: center; /* Центрируем сетку внутри контейнера */
  margin: 35px auto; /* Центрируем контейнер */
  padding: 0; /* Убираем лишние отступы */
}
.tasks__card {
  border: 1px solid black;
  border-radius: 3%;
  background-color: var(--lightGray-color);
  min-width: 300px;
  max-width: 300px;
  max-height: 1000px;
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: 20% auto;
}

.tasks__checkbox {
  width: 20px;
  height: 20px;
  justify-self: left;
  grid-column: 1/2;
  grid-row: 1/2;
}
.tasks__text {
  margin: 3px;
  min-height: 100px;
  grid-column: 1/3;
  grid-row: 2/3;
}
.more-button {
  background: none;
  border: none;
  justify-self: right;
}
.more-button:hover {
  color: var(--caramel-color);
}
